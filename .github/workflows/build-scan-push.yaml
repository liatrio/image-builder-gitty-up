# name: Build, Scan, Push

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Release
#         id: tag
#         uses: liatrio/github-actions/conventional-release@master
#         with:
#           debug: true
#           # GITHUB_HEAD_REF is only set during PRs, otherwise it is ""
#           dryRun: ${{ github.head_ref }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     outputs:
#       newVersion: ${{ steps.tag.outputs.newVersion }}

#   # The build job uses the build-scan-push reusable workflow
#   build:
#     needs: release
#     uses: liatrio/github-workflows/.github/workflows/build-scan-push.yaml@main
#     with:
#       publish: ${{ github.ref == 'refs/heads/main' }}
#       repository: ghcr.io
#       registry-username: ${{ github.actor }}
#       tag: ${{ needs.release.outputs.newVersion }}
#       image-name: ${{ github.event.repository.name }}
#       nofail: true
#     secrets:
#       registry-password: ${{ secrets.GITHUB_TOKEN }}

name: Test

on:
  push:
    branches:
      - "**"
      - "!main"

env:
  IMAGE_NAME: ghcr.io/liatrio/image-builder-gitty-up

jobs:
  docker: # Image scanning step
    name: Build and Analyze Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:test .
      
      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@0105373003c89c494a3f436bd5efc57f3ac1ca20
        with:
          image-ref: ${{ env.IMAGE_NAME }}:test
          exit-code: ${{ steps.exit-code.outputs.exit_code }}
          severity: CRITICAL,HIGH

      # - name: Check for vulnerabilities
      #   if: steps.trivy.outputs.exit_code == 1
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       core.setFailed('Vulnerabilities found in the image.')